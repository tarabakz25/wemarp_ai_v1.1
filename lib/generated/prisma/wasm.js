
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  displayName: 'displayName',
  avatarUrl: 'avatarUrl',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  visibility: 'visibility',
  currentVersionId: 'currentVersionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ownerId: 'ownerId'
};

exports.Prisma.VersionScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  versionNo: 'versionNo',
  status: 'status',
  llmModel: 'llmModel',
  promptSnapshot: 'promptSnapshot',
  marpMd: 'marpMd',
  htmlCache: 'htmlCache',
  createdById: 'createdById',
  createdAt: 'createdAt'
};

exports.Prisma.GenerationScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  versionId: 'versionId',
  status: 'status',
  model: 'model',
  prompt: 'prompt',
  response: 'response',
  tokenUsage: 'tokenUsage',
  costCents: 'costCents',
  metadata: 'metadata',
  createdById: 'createdById',
  createdAt: 'createdAt'
};

exports.Prisma.ExportScalarFieldEnum = {
  id: 'id',
  versionId: 'versionId',
  type: 'type',
  status: 'status',
  storagePath: 'storagePath',
  sizeBytes: 'sizeBytes',
  pageCount: 'pageCount',
  errorText: 'errorText',
  createdById: 'createdById',
  createdAt: 'createdAt'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ProjectTagScalarFieldEnum = {
  projectId: 'projectId',
  tagId: 'tagId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  user: 'user',
  admin: 'admin'
};

exports.Visibility = exports.$Enums.Visibility = {
  public: 'public',
  private: 'private',
  unlisted: 'unlisted'
};

exports.GenStatus = exports.$Enums.GenStatus = {
  queued: 'queued',
  running: 'running',
  succeeded: 'succeeded',
  failed: 'failed'
};

exports.VersionStatus = exports.$Enums.VersionStatus = {
  draft: 'draft',
  generated: 'generated',
  edited: 'edited'
};

exports.ExportType = exports.$Enums.ExportType = {
  pdf: 'pdf',
  png: 'png',
  html: 'html',
  md: 'md'
};

exports.ExportStatus = exports.$Enums.ExportStatus = {
  queued: 'queued',
  running: 'running',
  succeeded: 'succeeded',
  failed: 'failed'
};

exports.Prisma.ModelName = {
  User: 'User',
  Project: 'Project',
  Version: 'Version',
  Generation: 'Generation',
  Export: 'Export',
  Tag: 'Tag',
  ProjectTag: 'ProjectTag'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/kz/wemarp_ai_v1.1/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/kz/wemarp_ai_v1.1/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  user\n  admin\n}\n\nenum Visibility {\n  public\n  private\n  unlisted\n}\n\nenum GenStatus {\n  queued\n  running\n  succeeded\n  failed\n}\n\nenum VersionStatus {\n  draft\n  generated\n  edited\n}\n\nenum ExportType {\n  pdf\n  png\n  html\n  md\n}\n\nenum ExportStatus {\n  queued\n  running\n  succeeded\n  failed\n}\n\nmodel User {\n  id          String   @id @db.Uuid\n  username    String?  @unique\n  displayName String?\n  avatarUrl   String?\n  role        Role     @default(user)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  projects    Project[]\n  versions    Version[]    @relation(\"VersionCreatedBy\")\n  generations Generation[] @relation(\"GenerationCreatedBy\")\n  exports     Export[]     @relation(\"ExportCreatedBy\")\n}\n\nmodel Project {\n  id               String     @id @db.Uuid\n  title            String\n  description      String?\n  visibility       Visibility @default(private)\n  currentVersionId String?    @unique @db.Uuid\n  createdAt        DateTime   @default(now())\n  updatedAt        DateTime   @updatedAt\n  ownerId          String     @db.Uuid\n\n  owner       User         @relation(fields: [ownerId], references: [id], onDelete: Cascade)\n  versions    Version[]\n  generations Generation[]\n  tags        ProjectTag[]\n\n  currentVersion Version? @relation(\"ProjectCurrentVersion\", fields: [currentVersionId], references: [id], onDelete: SetNull)\n\n  @@index([ownerId])\n  @@index([visibility])\n}\n\nmodel Version {\n  id             String        @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  projectId      String        @db.Uuid\n  versionNo      Int\n  status         VersionStatus @default(generated)\n  llmModel       String?\n  promptSnapshot String?\n  marpMd         String\n  htmlCache      String?\n  createdById    String?       @db.Uuid\n  createdAt      DateTime      @default(now())\n\n  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  createdBy User?   @relation(\"VersionCreatedBy\", fields: [createdById], references: [id], onDelete: SetNull)\n\n  generations Generation[]\n  exports     Export[]\n\n  // Project.currentVersionId からの逆参照（任意）\n  currentOf Project? @relation(\"ProjectCurrentVersion\")\n\n  @@unique([projectId, versionNo])\n  @@index([createdAt(sort: Desc)])\n}\n\nmodel Generation {\n  id          String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  projectId   String?   @db.Uuid\n  versionId   String?   @db.Uuid\n  status      GenStatus @default(queued)\n  model       String\n  prompt      String?\n  response    String?\n  tokenUsage  Json? // {prompt, completion, total}\n  costCents   Int?\n  metadata    Json?\n  createdById String?   @db.Uuid\n  createdAt   DateTime  @default(now())\n\n  project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  version   Version? @relation(fields: [versionId], references: [id], onDelete: Cascade)\n  createdBy User?    @relation(\"GenerationCreatedBy\", fields: [createdById], references: [id], onDelete: SetNull)\n\n  @@index([projectId, createdAt(sort: Desc)])\n}\n\nmodel Export {\n  id          String       @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  versionId   String       @db.Uuid\n  type        ExportType\n  status      ExportStatus @default(queued)\n  storagePath String?\n  sizeBytes   BigInt?\n  pageCount   Int?\n  errorText   String?\n  createdById String?      @db.Uuid\n  createdAt   DateTime     @default(now())\n\n  version   Version @relation(fields: [versionId], references: [id], onDelete: Cascade)\n  createdBy User?   @relation(\"ExportCreatedBy\", fields: [createdById], references: [id], onDelete: SetNull)\n\n  @@index([versionId, createdAt(sort: Desc)])\n}\n\nmodel Tag {\n  id   BigInt @id @default(autoincrement())\n  name String @unique\n\n  projects ProjectTag[]\n}\n\nmodel ProjectTag {\n  projectId String @db.Uuid\n  tagId     BigInt\n\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  tag     Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)\n\n  @@id([projectId, tagId])\n}\n",
  "inlineSchemaHash": "8eba5f5d68ebefa7a8fc81793fcfed24db3cb2d152244423c91a51dd080c4b7b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToUser\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"Version\",\"relationName\":\"VersionCreatedBy\"},{\"name\":\"generations\",\"kind\":\"object\",\"type\":\"Generation\",\"relationName\":\"GenerationCreatedBy\"},{\"name\":\"exports\",\"kind\":\"object\",\"type\":\"Export\",\"relationName\":\"ExportCreatedBy\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"Visibility\"},{\"name\":\"currentVersionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectToUser\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"Version\",\"relationName\":\"ProjectToVersion\"},{\"name\":\"generations\",\"kind\":\"object\",\"type\":\"Generation\",\"relationName\":\"GenerationToProject\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"ProjectTag\",\"relationName\":\"ProjectToProjectTag\"},{\"name\":\"currentVersion\",\"kind\":\"object\",\"type\":\"Version\",\"relationName\":\"ProjectCurrentVersion\"}],\"dbName\":null},\"Version\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionNo\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VersionStatus\"},{\"name\":\"llmModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptSnapshot\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marpMd\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"htmlCache\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToVersion\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"VersionCreatedBy\"},{\"name\":\"generations\",\"kind\":\"object\",\"type\":\"Generation\",\"relationName\":\"GenerationToVersion\"},{\"name\":\"exports\",\"kind\":\"object\",\"type\":\"Export\",\"relationName\":\"ExportToVersion\"},{\"name\":\"currentOf\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectCurrentVersion\"}],\"dbName\":null},\"Generation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"GenStatus\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenUsage\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"costCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"GenerationToProject\"},{\"name\":\"version\",\"kind\":\"object\",\"type\":\"Version\",\"relationName\":\"GenerationToVersion\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GenerationCreatedBy\"}],\"dbName\":null},\"Export\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ExportType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExportStatus\"},{\"name\":\"storagePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeBytes\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"pageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"version\",\"kind\":\"object\",\"type\":\"Version\",\"relationName\":\"ExportToVersion\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExportCreatedBy\"}],\"dbName\":null},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"ProjectTag\",\"relationName\":\"ProjectTagToTag\"}],\"dbName\":null},\"ProjectTag\":{\"fields\":[{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"ProjectTagToTag\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

